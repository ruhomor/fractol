!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ARCHITECTURE_ID	cmake-build-debug/CMakeFiles/3.17.3/CompilerIdC/CMakeCCompilerId.c	/^#   define ARCHITECTURE_ID /;"	d	file:
ARCHITECTURE_ID	cmake-build-debug/CMakeFiles/3.17.3/CompilerIdC/CMakeCCompilerId.c	/^#  define ARCHITECTURE_ID /;"	d	file:
ARCHITECTURE_ID	cmake-build-debug/CMakeFiles/3.17.3/CompilerIdC/CMakeCCompilerId.c	/^#  define ARCHITECTURE_ID$/;"	d	file:
BUFF_MSIZE	fractol.h	/^# define BUFF_MSIZE /;"	d
BUFF_SIZE	lib/get_next_line.h	/^# define BUFF_SIZE /;"	d
CC	Makefile	/^CC = gcc$/;"	m
CC	lib/Makefile	/^CC = gcc$/;"	m
CFILES	Makefile	/^CFILES = window \\$/;"	m
CMAKE_BINARY_DIR	cmake-build-debug/Makefile	/^CMAKE_BINARY_DIR = \/Users\/Ruslan\/Desktop\/born2code\/fractol\/cmake-build-debug$/;"	m
CMAKE_COMMAND	cmake-build-debug/Makefile	/^CMAKE_COMMAND = "\/Users\/Ruslan\/Library\/Application Support\/JetBrains\/Toolbox\/apps\/CLion\/ch-0\/202.6948.80\/CLion.app\/Contents\/bin\/cmake\/mac\/bin\/cmake"$/;"	m
CMAKE_SOURCE_DIR	cmake-build-debug/Makefile	/^CMAKE_SOURCE_DIR = \/Users\/Ruslan\/Desktop\/born2code\/fractol$/;"	m
COMPILER_ID	cmake-build-debug/CMakeFiles/3.17.3/CompilerIdC/CMakeCCompilerId.c	/^# define COMPILER_ID /;"	d	file:
COMPILER_VERSION_INTERNAL	cmake-build-debug/CMakeFiles/3.17.3/CompilerIdC/CMakeCCompilerId.c	/^#  define COMPILER_VERSION_INTERNAL /;"	d	file:
COMPILER_VERSION_INTERNAL	cmake-build-debug/CMakeFiles/3.17.3/CompilerIdC/CMakeCCompilerId.c	/^# define COMPILER_VERSION_INTERNAL /;"	d	file:
COMPILER_VERSION_MAJOR	cmake-build-debug/CMakeFiles/3.17.3/CompilerIdC/CMakeCCompilerId.c	/^  # define COMPILER_VERSION_MAJOR /;"	d	file:
COMPILER_VERSION_MAJOR	cmake-build-debug/CMakeFiles/3.17.3/CompilerIdC/CMakeCCompilerId.c	/^#  define COMPILER_VERSION_MAJOR /;"	d	file:
COMPILER_VERSION_MAJOR	cmake-build-debug/CMakeFiles/3.17.3/CompilerIdC/CMakeCCompilerId.c	/^# define COMPILER_VERSION_MAJOR /;"	d	file:
COMPILER_VERSION_MINOR	cmake-build-debug/CMakeFiles/3.17.3/CompilerIdC/CMakeCCompilerId.c	/^  # define COMPILER_VERSION_MINOR /;"	d	file:
COMPILER_VERSION_MINOR	cmake-build-debug/CMakeFiles/3.17.3/CompilerIdC/CMakeCCompilerId.c	/^#  define COMPILER_VERSION_MINOR /;"	d	file:
COMPILER_VERSION_MINOR	cmake-build-debug/CMakeFiles/3.17.3/CompilerIdC/CMakeCCompilerId.c	/^# define COMPILER_VERSION_MINOR /;"	d	file:
COMPILER_VERSION_PATCH	cmake-build-debug/CMakeFiles/3.17.3/CompilerIdC/CMakeCCompilerId.c	/^  # define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_PATCH	cmake-build-debug/CMakeFiles/3.17.3/CompilerIdC/CMakeCCompilerId.c	/^#   define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_PATCH	cmake-build-debug/CMakeFiles/3.17.3/CompilerIdC/CMakeCCompilerId.c	/^#  define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_PATCH	cmake-build-debug/CMakeFiles/3.17.3/CompilerIdC/CMakeCCompilerId.c	/^# define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_TWEAK	cmake-build-debug/CMakeFiles/3.17.3/CompilerIdC/CMakeCCompilerId.c	/^#  define COMPILER_VERSION_TWEAK /;"	d	file:
COMPILER_VERSION_TWEAK	cmake-build-debug/CMakeFiles/3.17.3/CompilerIdC/CMakeCCompilerId.c	/^# define COMPILER_VERSION_TWEAK /;"	d	file:
C_DIALECT	cmake-build-debug/CMakeFiles/3.17.3/CompilerIdC/CMakeCCompilerId.c	/^#  define C_DIALECT /;"	d	file:
C_DIALECT	cmake-build-debug/CMakeFiles/3.17.3/CompilerIdC/CMakeCCompilerId.c	/^#  define C_DIALECT$/;"	d	file:
C_DIALECT	cmake-build-debug/CMakeFiles/3.17.3/CompilerIdC/CMakeCCompilerId.c	/^# define C_DIALECT /;"	d	file:
DEC	cmake-build-debug/CMakeFiles/3.17.3/CompilerIdC/CMakeCCompilerId.c	/^#define DEC(/;"	d	file:
EQUALS	cmake-build-debug/Makefile	/^EQUALS = =$/;"	m
FLAGS	Makefile	/^FLAGS = -Werror -Wall -Wextra -g$/;"	m
FLAGS	lib/Makefile	/^FLAGS = -Werror -Wextra -Wall$/;"	m
FONT_HEIGHT	minilibx_macos/mlx_int.h	/^#define	FONT_HEIGHT	/;"	d
FONT_WIDTH	minilibx_macos/mlx_int.h	/^#define FONT_WIDTH	/;"	d
FRACTOL_H	fractol.h	/^# define FRACTOL_H$/;"	d
FUNCS	lib/Makefile	/^FUNCS = ft_memset \\$/;"	m
FW	Makefile	/^FW = -framework OpenGL -framework AppKit$/;"	m
GET_NEXT_LINE_H	lib/get_next_line.h	/^# define GET_NEXT_LINE_H$/;"	d
GLIB	Makefile	/^GLIB = .\/minilibx_macos$/;"	m
HEX	cmake-build-debug/CMakeFiles/3.17.3/CompilerIdC/CMakeCCompilerId.c	/^#define HEX(/;"	d	file:
ID_VOID_MAIN	cmake-build-debug/CMakeFiles/3.17.3/CompilerIdC/CMakeCCompilerId.c	/^# define ID_VOID_MAIN$/;"	d	file:
INCL	Makefile	/^INCL = lib\/libft.a minilibx_macos\/libmlx.a$/;"	m
INCL	lib/Makefile	/^INCL = .\/$/;"	m
ITERD	fractol.h	/^# define ITERD /;"	d
LIB	Makefile	/^LIB = .\/lib$/;"	m
LIBFT_H	lib/libft.h	/^# define LIBFT_H$/;"	d
MAX	fractol.h	/^# define MAX /;"	d
MAXITERS	fractol.h	/^# define MAXITERS /;"	d
MAX_EVENT	minilibx_macos/mlx_int.h	/^#define	MAX_EVENT	/;"	d
MAX_PIXEL_NB	minilibx_macos/mlx_int.h	/^#define MAX_PIXEL_NB	/;"	d
MIN	fractol.h	/^# define MIN /;"	d
MLX_H	minilibx_macos/mlx.h	/^#define	MLX_H$/;"	d
NAME	Makefile	/^NAME = fractol$/;"	m
NAME	lib/Makefile	/^NAME = libft.a$/;"	m
NOM	minilibx_macos/Makefile	/^NOM=libmlx.a$/;"	m
OBJ	minilibx_macos/Makefile	/^OBJ=$(OBJ1:.m=.o)$/;"	m
OBJ1	minilibx_macos/Makefile	/^OBJ1=$(SRC:.c=.o)$/;"	m
OUT	Makefile	/^OUT = $(patsubst %, %.o, $(CFILES))$/;"	m
OUT	lib/Makefile	/^OUT = $(patsubst %, %.o, $(FUNCS))$/;"	m
PLATFORM_ID	cmake-build-debug/CMakeFiles/3.17.3/CompilerIdC/CMakeCCompilerId.c	/^#  define PLATFORM_ID /;"	d	file:
PLATFORM_ID	cmake-build-debug/CMakeFiles/3.17.3/CompilerIdC/CMakeCCompilerId.c	/^#  define PLATFORM_ID$/;"	d	file:
PLATFORM_ID	cmake-build-debug/CMakeFiles/3.17.3/CompilerIdC/CMakeCCompilerId.c	/^# define PLATFORM_ID /;"	d	file:
PLATFORM_ID	cmake-build-debug/CMakeFiles/3.17.3/CompilerIdC/CMakeCCompilerId.c	/^# define PLATFORM_ID$/;"	d	file:
RETURN	minilibx_macos/mlx_xpm.c	/^#define	RETURN	/;"	d	file:
RM	cmake-build-debug/Makefile	/^RM = "\/Users\/Ruslan\/Library\/Application Support\/JetBrains\/Toolbox\/apps\/CLion\/ch-0\/202.6948.80\/CLion.app\/Contents\/bin\/cmake\/mac\/bin\/cmake" -E rm -f$/;"	m
SHELL	cmake-build-debug/Makefile	/^SHELL = \/bin\/sh$/;"	m
SIMULATE_ID	cmake-build-debug/CMakeFiles/3.17.3/CompilerIdC/CMakeCCompilerId.c	/^#  define SIMULATE_ID /;"	d	file:
SIMULATE_VERSION_MAJOR	cmake-build-debug/CMakeFiles/3.17.3/CompilerIdC/CMakeCCompilerId.c	/^#  define SIMULATE_VERSION_MAJOR /;"	d	file:
SIMULATE_VERSION_MINOR	cmake-build-debug/CMakeFiles/3.17.3/CompilerIdC/CMakeCCompilerId.c	/^#  define SIMULATE_VERSION_MINOR /;"	d	file:
SIMULATE_VERSION_PATCH	cmake-build-debug/CMakeFiles/3.17.3/CompilerIdC/CMakeCCompilerId.c	/^#  define SIMULATE_VERSION_PATCH /;"	d	file:
SRC	minilibx_macos/Makefile	/^SRC= mlx_shaders.c mlx_new_window.m mlx_init_loop.m mlx_new_image.m mlx_xpm.c mlx_int_str_to_wordtab.c$/;"	m
SRCS	Makefile	/^SRCS = $(patsubst %, %.c, $(CFILES))$/;"	m
SRCS	lib/Makefile	/^SRCS = $(patsubst %, %.c, $(FUNCS))$/;"	m
STRINGIFY	cmake-build-debug/CMakeFiles/3.17.3/CompilerIdC/CMakeCCompilerId.c	/^#define STRINGIFY(/;"	d	file:
STRINGIFY_HELPER	cmake-build-debug/CMakeFiles/3.17.3/CompilerIdC/CMakeCCompilerId.c	/^#define STRINGIFY_HELPER(/;"	d	file:
UNIQ_BPP	minilibx_macos/mlx_int.h	/^#define UNIQ_BPP	/;"	d
WINX	fractol.h	/^# define WINX /;"	d
WINY	fractol.h	/^# define WINY /;"	d
ZOOMDIV	fractol.h	/^# define ZOOMDIV /;"	d
ZOOMMUL	fractol.h	/^# define ZOOMMUL /;"	d
alpha	fractol.h	/^	unsigned char		alpha;$/;"	m	struct:s_color
appid	minilibx_macos/mlx_int.h	/^  void			*appid;$/;"	m	struct:mlx_ptr_s
b	fractol.h	/^	unsigned char		b;$/;"	m	struct:s_color
bpp	fractol.h	/^	int					bpp;$/;"	m	struct:s_image
buffer	minilibx_macos/mlx_int.h	/^  char			*buffer;$/;"	m	struct:mlx_img_list_s
bytes_per_pixel	minilibx_macos/font.c	/^  unsigned int 	 bytes_per_pixel; \/* 2:RGB16, 3:RGB, 4:RGBA *\/ $/;"	m	struct:__anon1	file:
c_add	image_constructor.c	/^t_complex	c_add(t_complex a, t_complex b)$/;"	f
c_multiply	image_constructor.c	/^t_complex	c_multiply(t_complex a, t_complex b)$/;"	f
col	minilibx_macos/mlx_xpm.c	/^  int           col;$/;"	m	struct:s_xpm_col	file:
color	fractol.h	/^	t_color				color;$/;"	m	struct:s_pxl
color	minilibx_macos/mlx_xpm.c	/^  int   color;$/;"	m	struct:s_col_name	file:
colorfonk	image_constructor.c	/^t_color	colorfonk(int iters, int max)$/;"	f
colorfonker	image_constructor.c	/^t_color	colorfonker(int iters, int max)$/;"	f
colorsimp	image_constructor.c	/^t_color	colorsimp(int iters)$/;"	f
const	cmake-build-debug/CMakeFiles/3.17.3/CompilerIdC/CMakeCCompilerId.c	/^# define const$/;"	d	file:
construct_fractal	image_constructor.c	/^void	construct_fractal(void *mlx_ptr, t_window *meme)$/;"	f
content	lib/libft.h	/^	void			*content;$/;"	m	struct:s_list
content_size	lib/libft.h	/^	size_t			content_size;$/;"	m	struct:s_list
create_db	lib/get_next_line.c	/^t_ldb		*create_db(const int fd)$/;"	f
cut	lib/get_next_line.h	/^	char			*cut;$/;"	m	struct:s_ldb
d	fractol.h	/^	t_complex			d;$/;"	m	struct:s_frac
d_flag	fractol.h	/^	long int			d_flag;$/;"	m	struct:s_shift
destroy_image	image_constructor.c	/^void 			destroy_image(void *mlx_ptr, t_image *image)$/;"	f
display_log	minilibx_macos/mlx_shaders.c	/^void display_log(GLuint object, void (*param_func)(), void (*getlog_func)())$/;"	f
drag_flag	fractol.h	/^	int					drag_flag;$/;"	m	struct:s_window
endian	fractol.h	/^	int					endian;$/;"	m	struct:s_image
escape_butt	escape_button.c	/^void				escape_butt(t_window *meme)$/;"	f
even	image_constructor.c	/^int 	even(t_pxl pxl)$/;"	f
fd	lib/get_next_line.h	/^	int				fd;$/;"	m	struct:s_ldb
fill	image_constructor.c	/^void 	fill(t_image *image, t_color color)$/;"	f
fill_if	image_constructor.c	/^void	fill_if(t_image *image, t_frac frac, void (*f)(t_pxl*, t_complex, int))$/;"	f
font	minilibx_macos/mlx_int.h	/^  mlx_img_list_t	*font;$/;"	m	struct:mlx_ptr_s
font_atlas	minilibx_macos/font.c	/^} font_atlas = {$/;"	v	typeref:struct:__anon1	file:
font_fshader	minilibx_macos/mlx_int.h	/^  GLuint	font_fshader;$/;"	m	struct:glsl_info_s
font_program	minilibx_macos/mlx_int.h	/^  GLuint	font_program;$/;"	m	struct:glsl_info_s
font_vshader	minilibx_macos/mlx_int.h	/^  GLuint	font_vshader;$/;"	m	struct:glsl_info_s
frac	fractol.h	/^	t_frac				*frac;$/;"	m	struct:s_window
ft_absolute	lib/ft_putnbr_fd.c	/^static	int		ft_absolute(int n)$/;"	f	file:
ft_atoi	lib/ft_atoi.c	/^int	ft_atoi(const char *str)$/;"	f
ft_backwardsmemcpy	lib/ft_backwardsmemcpy.c	/^void	*ft_backwardsmemcpy(void *dst, const void *src, size_t n)$/;"	f
ft_bzero	lib/ft_bzero.c	/^void	ft_bzero(void *s, size_t n)$/;"	f
ft_cmp	lib/ft_strstr.c	/^static int	ft_cmp(const char *hs, const char *n)$/;"	f	file:
ft_cmpl	lib/ft_strnstr.c	/^static	int	ft_cmpl(const char *hs, const char *n, size_t len)$/;"	f	file:
ft_countwords	lib/ft_countwords.c	/^size_t	ft_countwords(char const *s, char delim)$/;"	f
ft_deldel	lib/ft_deldel.c	/^void	*ft_deldel(void **buf)$/;"	f
ft_faildel	lib/ft_lstmap.c	/^static void	ft_faildel(void *meme, size_t size)$/;"	f	file:
ft_isalnum	lib/ft_isalnum.c	/^int	ft_isalnum(int c)$/;"	f
ft_isalpha	lib/ft_isalpha.c	/^int	ft_isalpha(int c)$/;"	f
ft_isascii	lib/ft_isascii.c	/^int	ft_isascii(int c)$/;"	f
ft_isdigit	lib/ft_isdigit.c	/^int	ft_isdigit(int c)$/;"	f
ft_islowercase	lib/ft_islowercase.c	/^int	ft_islowercase(int c)$/;"	f
ft_isprint	lib/ft_isprint.c	/^int	ft_isprint(int c)$/;"	f
ft_isspace	lib/ft_isspace.c	/^int	ft_isspace(int c)$/;"	f
ft_isupper	lib/ft_isupper.c	/^int	ft_isupper(int c)$/;"	f
ft_iswhitespace	lib/ft_strtrim.c	/^static	int		ft_iswhitespace(char c)$/;"	f	file:
ft_itoa	lib/ft_itoa.c	/^char		*ft_itoa(int n)$/;"	f
ft_itoa_base	lib/ft_itoa_base.c	/^char		*ft_itoa_base(unsigned int nb, int base)$/;"	f
ft_lennb	lib/ft_itoa_base.c	/^static int	ft_lennb(unsigned int nb, int base)$/;"	f	file:
ft_lstadd	lib/ft_lstadd.c	/^void	ft_lstadd(t_list **alst, t_list *neww)$/;"	f
ft_lstdel	lib/ft_lstdel.c	/^void	ft_lstdel(t_list **alst, void (*del)(void*, size_t))$/;"	f
ft_lstdelone	lib/ft_lstdelone.c	/^void	ft_lstdelone(t_list **alst, void (*del)(void *, size_t))$/;"	f
ft_lstiter	lib/ft_lstiter.c	/^void	ft_lstiter(t_list *lst, void (*f)(t_list *elem))$/;"	f
ft_lstmap	lib/ft_lstmap.c	/^t_list		*ft_lstmap(t_list *lst, t_list *(*f)(t_list *elem))$/;"	f
ft_lstnew	lib/ft_lstnew.c	/^t_list	*ft_lstnew(void const *content, size_t content_size)$/;"	f
ft_memalloc	lib/ft_memalloc.c	/^void	*ft_memalloc(size_t size)$/;"	f
ft_memccpy	lib/ft_memccpy.c	/^void	*ft_memccpy(void *dst, const void *src, int c, size_t n)$/;"	f
ft_memchr	lib/ft_memchr.c	/^void	*ft_memchr(const void *s, int c, size_t n)$/;"	f
ft_memcmp	lib/ft_memcmp.c	/^int	ft_memcmp(const void *s1, const void *s2, size_t n)$/;"	f
ft_memcpy	lib/ft_memcpy.c	/^void	*ft_memcpy(void *dst, const void *src, size_t n)$/;"	f
ft_memdel	lib/ft_memdel.c	/^void	ft_memdel(void **ap)$/;"	f
ft_memmove	lib/ft_memmove.c	/^void	*ft_memmove(void *dst, const void *src, size_t len)$/;"	f
ft_memset	lib/ft_memset.c	/^void	*ft_memset(void *b, int c, size_t len)$/;"	f
ft_nbrlen	lib/ft_putnbr_fd.c	/^static	int		ft_nbrlen(int n)$/;"	f	file:
ft_nbrlen	lib/ft_putunbr_fd.c	/^static	int		ft_nbrlen(unsigned int n)$/;"	f	file:
ft_pow10	lib/ft_putnbr_fd.c	/^static	int		ft_pow10(int len)$/;"	f	file:
ft_pow10	lib/ft_putunbr_fd.c	/^static	int		ft_pow10(int len)$/;"	f	file:
ft_putchar	lib/ft_putchar.c	/^void	ft_putchar(char c)$/;"	f
ft_putchar_fd	lib/ft_putchar_fd.c	/^void	ft_putchar_fd(char c, int fd)$/;"	f
ft_putendl	lib/ft_putendl.c	/^void	ft_putendl(char const *s)$/;"	f
ft_putendl_fd	lib/ft_putendl_fd.c	/^void	ft_putendl_fd(char const *s, int fd)$/;"	f
ft_putnbr	lib/ft_putnbr.c	/^void	ft_putnbr(int n)$/;"	f
ft_putnbr_fd	lib/ft_putnbr_fd.c	/^void			ft_putnbr_fd(int n, int fd)$/;"	f
ft_putstr	lib/ft_putstr.c	/^void	ft_putstr(char const *s)$/;"	f
ft_putstr_fd	lib/ft_putstr_fd.c	/^void	ft_putstr_fd(char const *s, int fd)$/;"	f
ft_putunbr	lib/ft_putunbr.c	/^void	ft_putunbr(unsigned int n)$/;"	f
ft_putunbr_fd	lib/ft_putunbr_fd.c	/^void			ft_putunbr_fd(unsigned int n, int fd)$/;"	f
ft_reqsize	lib/ft_itoa.c	/^static	int	ft_reqsize(int n)$/;"	f	file:
ft_skipspace	lib/ft_strtrim.c	/^static	char	*ft_skipspace(char const *s)$/;"	f	file:
ft_skipspacebackwards	lib/ft_strtrim.c	/^static	char	*ft_skipspacebackwards(char *ends, char const *s)$/;"	f	file:
ft_sstrlen	lib/ft_strsplit.c	/^static size_t	ft_sstrlen(char const *s, char delim)$/;"	f	file:
ft_stomemcpy	lib/ft_strtrim.c	/^static	char	*ft_stomemcpy(char *mem, char const *s, char *ends)$/;"	f	file:
ft_strcat	lib/ft_strcat.c	/^char	*ft_strcat(char *s1, const char *s2)$/;"	f
ft_strchr	lib/ft_strchr.c	/^char	*ft_strchr(const char *s, int c)$/;"	f
ft_strclr	lib/ft_strclr.c	/^void	ft_strclr(char *s)$/;"	f
ft_strcmp	lib/ft_strcmp.c	/^int	ft_strcmp(const char *s1, const char *s2)$/;"	f
ft_strcpy	lib/ft_strcpy.c	/^char	*ft_strcpy(char *dst, const char *src)$/;"	f
ft_strdel	lib/ft_strdel.c	/^void	ft_strdel(char **as)$/;"	f
ft_strdup	lib/ft_strdup.c	/^char	*ft_strdup(const char *s1)$/;"	f
ft_strequ	lib/ft_strequ.c	/^int	ft_strequ(char const *s1, char const *s2)$/;"	f
ft_striter	lib/ft_striter.c	/^void	ft_striter(char *s, void (*f)(char *))$/;"	f
ft_striteri	lib/ft_striteri.c	/^void	ft_striteri(char *s, void (*f)(unsigned int, char *))$/;"	f
ft_strjoin	lib/ft_strjoin.c	/^char	*ft_strjoin(char const *s1, char const *s2)$/;"	f
ft_strlcat	lib/ft_strlcat.c	/^size_t	ft_strlcat(char *dst, const char *src, size_t size)$/;"	f
ft_strlen	lib/ft_strlen.c	/^size_t	ft_strlen(const char *s)$/;"	f
ft_strmap	lib/ft_strmap.c	/^char	*ft_strmap(char const *s, char (*f)(char))$/;"	f
ft_strmapi	lib/ft_strmapi.c	/^char	*ft_strmapi(char const *s, char (*f)(unsigned int, char))$/;"	f
ft_strncat	lib/ft_strncat.c	/^char	*ft_strncat(char *s1, const char *s2, size_t n)$/;"	f
ft_strncmp	lib/ft_strncmp.c	/^int	ft_strncmp(const char *s1, const char *s2, size_t n)$/;"	f
ft_strncpy	lib/ft_strncpy.c	/^char	*ft_strncpy(char *dst, const char *src, size_t len)$/;"	f
ft_strnequ	lib/ft_strnequ.c	/^int	ft_strnequ(char const *s1, char const *s2, size_t n)$/;"	f
ft_strnew	lib/ft_strnew.c	/^char	*ft_strnew(size_t size)$/;"	f
ft_strnstr	lib/ft_strnstr.c	/^char		*ft_strnstr(const char *haystack, const char *needle, size_t len)$/;"	f
ft_strrchr	lib/ft_strrchr.c	/^char	*ft_strrchr(const char *s, int c)$/;"	f
ft_strsplit	lib/ft_strsplit.c	/^char			**ft_strsplit(char const *s, char c)$/;"	f
ft_strstr	lib/ft_strstr.c	/^char		*ft_strstr(const char *haystack, const char *needle)$/;"	f
ft_strsub	lib/ft_strsub.c	/^char	*ft_strsub(char const *s, unsigned int start, size_t len)$/;"	f
ft_strtrim	lib/ft_strtrim.c	/^char			*ft_strtrim(char const *s)$/;"	f
ft_strzeros	lib/ft_strzeros.c	/^char	*ft_strzeros(size_t size)$/;"	f
ft_tolower	lib/ft_tolower.c	/^int	ft_tolower(int c)$/;"	f
ft_toupper	lib/ft_toupper.c	/^int	ft_toupper(int c)$/;"	f
ft_writenbr	lib/ft_writenbr.c	/^void	ft_writenbr(char *s, unsigned int n, int size)$/;"	f
func_t	minilibx_macos/mlx_int.h	/^typedef int (*func_t)();$/;"	t
g	fractol.h	/^	unsigned char		g;$/;"	m	struct:s_color
get_next_line	lib/get_next_line.c	/^int			get_next_line(const int fd, char **line)$/;"	f
glsl_info_s	minilibx_macos/mlx_int.h	/^typedef struct	glsl_info_s$/;"	s
glsl_info_t	minilibx_macos/mlx_int.h	/^} glsl_info_t;$/;"	t	typeref:struct:glsl_info_s
height	minilibx_macos/font.c	/^  unsigned int 	 height;$/;"	m	struct:__anon1	file:
height	minilibx_macos/mlx_int.h	/^  int			height;$/;"	m	struct:mlx_img_list_s
hookhandler	window.c	/^void				hookhandler(t_window *meme)$/;"	f
id	fractol.h	/^	int					id;$/;"	m	struct:s_frac
im	fractol.h	/^	double				im;$/;"	m	struct:s_complex
image_fshader	minilibx_macos/mlx_int.h	/^  GLuint	image_fshader;$/;"	m	struct:glsl_info_s
image_program	minilibx_macos/mlx_int.h	/^  GLuint	image_program;$/;"	m	struct:glsl_info_s
image_vshader	minilibx_macos/mlx_int.h	/^  GLuint	image_vshader;$/;"	m	struct:glsl_info_s
img	fractol.h	/^	t_image				**img;$/;"	m	struct:s_window
img	minilibx_macos/mlx_int.h	/^  mlx_img_list_t	*img;$/;"	m	struct:mlx_img_ctx_s
img_data	fractol.h	/^	char				*img_data;$/;"	m	struct:s_image
img_list	minilibx_macos/mlx_int.h	/^  mlx_img_ctx_t		*img_list;$/;"	m	struct:mlx_win_list_s
img_list	minilibx_macos/mlx_int.h	/^  mlx_img_list_t	*img_list;$/;"	m	struct:mlx_ptr_s
img_ptr	fractol.h	/^	void				*img_ptr;$/;"	m	struct:s_image
info_arch	cmake-build-debug/CMakeFiles/3.17.3/CompilerIdC/CMakeCCompilerId.c	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v
info_compiler	cmake-build-debug/CMakeFiles/3.17.3/CompilerIdC/CMakeCCompilerId.c	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v
info_cray	cmake-build-debug/CMakeFiles/3.17.3/CompilerIdC/CMakeCCompilerId.c	/^char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";$/;"	v
info_language_dialect_default	cmake-build-debug/CMakeFiles/3.17.3/CompilerIdC/CMakeCCompilerId.c	/^const char* info_language_dialect_default =$/;"	v
info_platform	cmake-build-debug/CMakeFiles/3.17.3/CompilerIdC/CMakeCCompilerId.c	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v
info_simulate	cmake-build-debug/CMakeFiles/3.17.3/CompilerIdC/CMakeCCompilerId.c	/^char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";$/;"	v
info_simulate_version	cmake-build-debug/CMakeFiles/3.17.3/CompilerIdC/CMakeCCompilerId.c	/^char const info_simulate_version[] = {$/;"	v
info_version	cmake-build-debug/CMakeFiles/3.17.3/CompilerIdC/CMakeCCompilerId.c	/^char const info_version[] = {$/;"	v
info_version_internal	cmake-build-debug/CMakeFiles/3.17.3/CompilerIdC/CMakeCCompilerId.c	/^char const info_version_internal[] = {$/;"	v
init_image	image_constructor.c	/^t_image 		*init_image(void *mlx_ptr)$/;"	f
initfrac	main.c	/^t_frac	initfrac(int a)$/;"	f
initwindow	window.c	/^t_window			*initwindow(void)$/;"	f
key_press1	buttons.c	/^int					key_press1(int keycode, void *p)$/;"	f
key_release1	buttons.c	/^int					key_release1(int keycode, void *p)$/;"	f
kph	button_binds.c	/^void				kph(int keycode, t_window *meme)$/;"	f
l_flag	fractol.h	/^	long int			l_flag;$/;"	m	struct:s_shift
loc_font_atlassize	minilibx_macos/mlx_int.h	/^  GLint		loc_font_atlassize;$/;"	m	struct:glsl_info_s
loc_font_color	minilibx_macos/mlx_int.h	/^  GLint		loc_font_color;$/;"	m	struct:glsl_info_s
loc_font_posinatlas	minilibx_macos/mlx_int.h	/^  GLint		loc_font_posinatlas;$/;"	m	struct:glsl_info_s
loc_font_posinwin	minilibx_macos/mlx_int.h	/^  GLint		loc_font_posinwin;$/;"	m	struct:glsl_info_s
loc_font_position	minilibx_macos/mlx_int.h	/^  GLint		loc_font_position;$/;"	m	struct:glsl_info_s
loc_font_texture	minilibx_macos/mlx_int.h	/^  GLint		loc_font_texture;$/;"	m	struct:glsl_info_s
loc_font_winhalfsize	minilibx_macos/mlx_int.h	/^  GLint		loc_font_winhalfsize;$/;"	m	struct:glsl_info_s
loc_image_pos	minilibx_macos/mlx_int.h	/^  GLint		loc_image_pos;$/;"	m	struct:glsl_info_s
loc_image_position	minilibx_macos/mlx_int.h	/^  GLint		loc_image_position;$/;"	m	struct:glsl_info_s
loc_image_size	minilibx_macos/mlx_int.h	/^  GLint		loc_image_size;$/;"	m	struct:glsl_info_s
loc_image_texture	minilibx_macos/mlx_int.h	/^  GLint		loc_image_texture;$/;"	m	struct:glsl_info_s
loc_image_winhalfsize	minilibx_macos/mlx_int.h	/^  GLint		loc_image_winhalfsize;$/;"	m	struct:glsl_info_s
loc_pixel_position	minilibx_macos/mlx_int.h	/^  GLint		loc_pixel_position;$/;"	m	struct:glsl_info_s
loc_pixel_texture	minilibx_macos/mlx_int.h	/^  GLint		loc_pixel_texture;$/;"	m	struct:glsl_info_s
loc_pixel_winhalfsize	minilibx_macos/mlx_int.h	/^  GLint		loc_pixel_winhalfsize;$/;"	m	struct:glsl_info_s
loop_hook	minilibx_macos/mlx_int.h	/^  void			(*loop_hook)(void *);$/;"	m	struct:mlx_ptr_s
loop_hook_data	minilibx_macos/mlx_int.h	/^  void			*loop_hook_data;$/;"	m	struct:mlx_ptr_s
loop_timer	minilibx_macos/mlx_int.h	/^  void			*loop_timer;$/;"	m	struct:mlx_ptr_s
lt	fractol.h	/^	t_complex			lt;$/;"	m	struct:s_frac
main	cmake-build-debug/CMakeFiles/3.17.3/CompilerIdC/CMakeCCompilerId.c	/^int main(argc, argv) int argc; char *argv[];$/;"	f
main	cmake-build-debug/CMakeFiles/3.17.3/CompilerIdC/CMakeCCompilerId.c	/^void main() {}$/;"	f
main	main.c	/^int		main(int argc, char **argv)$/;"	f
main_loop_active	minilibx_macos/mlx_int.h	/^  int			main_loop_active;$/;"	m	struct:mlx_ptr_s
mandelbrot	image_constructor.c	/^void		mandelbrot(t_pxl *pxl, t_complex c, int max)$/;"	f
maxiter	fractol.h	/^	int					maxiter;$/;"	m	struct:s_frac
mlx_col_name	minilibx_macos/mlx_rgb.c	/^struct s_col_name mlx_col_name[] =$/;"	v	typeref:struct:s_col_name
mlx_img_ctx_s	minilibx_macos/mlx_int.h	/^typedef struct	mlx_img_ctx_s$/;"	s
mlx_img_ctx_t	minilibx_macos/mlx_int.h	/^} mlx_img_ctx_t;$/;"	t	typeref:struct:mlx_img_ctx_s
mlx_img_list_s	minilibx_macos/mlx_int.h	/^typedef struct	mlx_img_list_s$/;"	s
mlx_img_list_t	minilibx_macos/mlx_int.h	/^} mlx_img_list_t;$/;"	t	typeref:struct:mlx_img_list_s
mlx_int_file_get_rid_comment	minilibx_macos/mlx_xpm.c	/^void	mlx_int_file_get_rid_comment(char *ptr, int size)$/;"	f
mlx_int_get_col_name	minilibx_macos/mlx_xpm.c	/^int	mlx_int_get_col_name(char *str,int size)$/;"	f
mlx_int_get_line	minilibx_macos/mlx_xpm.c	/^char	*mlx_int_get_line(char *ptr,int *pos,int size)$/;"	f
mlx_int_get_text_rgb	minilibx_macos/mlx_xpm.c	/^int	mlx_int_get_text_rgb(char *name, char *end)$/;"	f
mlx_int_parse_xpm	minilibx_macos/mlx_xpm.c	/^void	*mlx_int_parse_xpm(mlx_ptr_t *xvar,void *info,int info_size,char *(*f)())$/;"	f
mlx_int_static_line	minilibx_macos/mlx_xpm.c	/^char	*mlx_int_static_line(char **xpm_data,int *pos,int size)$/;"	f
mlx_int_str_str	minilibx_macos/mlx_int_str_to_wordtab.c	/^int	mlx_int_str_str(char *str,char *find,int len)$/;"	f
mlx_int_str_str_cote	minilibx_macos/mlx_int_str_to_wordtab.c	/^int	mlx_int_str_str_cote(char *str,char *find,int len)$/;"	f
mlx_int_str_to_wordtab	minilibx_macos/mlx_int_str_to_wordtab.c	/^char	**mlx_int_str_to_wordtab(char *str)$/;"	f
mlx_int_xpm_set_pixel	minilibx_macos/mlx_xpm.c	/^void	mlx_int_xpm_set_pixel(mlx_img_list_t *img, char *data, int opp, int col, int x)$/;"	f
mlx_ptr	fractol.h	/^	void				*mlx_ptr;$/;"	m	struct:s_window
mlx_ptr_s	minilibx_macos/mlx_int.h	/^typedef struct		mlx_ptr_s$/;"	s
mlx_ptr_t	minilibx_macos/mlx_int.h	/^} mlx_ptr_t;$/;"	t	typeref:struct:mlx_ptr_s
mlx_shaders	minilibx_macos/mlx_shaders.c	/^int mlx_shaders(glsl_info_t *glsl)$/;"	f
mlx_shaders_font	minilibx_macos/mlx_shaders.c	/^int mlx_shaders_font(glsl_info_t *glsl)$/;"	f
mlx_shaders_image	minilibx_macos/mlx_shaders.c	/^int mlx_shaders_image(glsl_info_t *glsl)$/;"	f
mlx_shaders_pixel	minilibx_macos/mlx_shaders.c	/^int mlx_shaders_pixel(glsl_info_t *glsl)$/;"	f
mlx_win_list_s	minilibx_macos/mlx_int.h	/^typedef struct	mlx_win_list_s$/;"	s
mlx_win_list_t	minilibx_macos/mlx_int.h	/^} mlx_win_list_t;$/;"	t	typeref:struct:mlx_win_list_s
mlx_xpm_file_to_image	minilibx_macos/mlx_xpm.c	/^void	*mlx_xpm_file_to_image(mlx_ptr_t *xvar,char *file,int *width,int *height)$/;"	f
mlx_xpm_to_image	minilibx_macos/mlx_xpm.c	/^void	*mlx_xpm_to_image(mlx_ptr_t *xvar,char **xpm_data,int *width,int *height)$/;"	f
mouse_press	buttons.c	/^int					mouse_press(int button, int x, int y, void *p)$/;"	f
mouse_release	buttons.c	/^int					mouse_release(int button, int x, int y, void *p)$/;"	f
name	minilibx_macos/mlx_xpm.c	/^  char  *name;$/;"	m	struct:s_col_name	file:
name	minilibx_macos/mlx_xpm.c	/^  int           name;$/;"	m	struct:s_xpm_col	file:
nb_flush	minilibx_macos/mlx_int.h	/^  int			nb_flush;$/;"	m	struct:mlx_win_list_s
next	lib/get_next_line.h	/^	struct s_ldb	*next;$/;"	m	struct:s_ldb	typeref:struct:s_ldb::s_ldb
next	lib/libft.h	/^	struct s_list	*next;$/;"	m	struct:s_list	typeref:struct:s_list::s_list
next	minilibx_macos/mlx_int.h	/^  struct mlx_img_ctx_s	*next;$/;"	m	struct:mlx_img_ctx_s	typeref:struct:mlx_img_ctx_s::mlx_img_ctx_s
next	minilibx_macos/mlx_int.h	/^  struct mlx_img_list_s	*next;$/;"	m	struct:mlx_img_list_s	typeref:struct:mlx_img_list_s::mlx_img_list_s
next	minilibx_macos/mlx_int.h	/^  struct mlx_win_list_s	*next;$/;"	m	struct:mlx_win_list_s	typeref:struct:mlx_win_list_s::mlx_win_list_s
pixel_data	minilibx_macos/font.c	/^  unsigned char	 pixel_data[1140 * 20 * 4 + 1];$/;"	m	struct:__anon1	file:
pixel_fshader	minilibx_macos/mlx_int.h	/^  GLuint	pixel_fshader;$/;"	m	struct:glsl_info_s
pixel_program	minilibx_macos/mlx_int.h	/^  GLuint	pixel_program;$/;"	m	struct:glsl_info_s
pixel_vshader	minilibx_macos/mlx_int.h	/^  GLuint	pixel_vshader;$/;"	m	struct:glsl_info_s
pixmgt	minilibx_macos/mlx_int.h	/^  int			pixmgt;$/;"	m	struct:mlx_win_list_s
pxl_to_point	image_constructor.c	/^t_complex	pxl_to_point(t_pxl pxl, t_complex d, t_frac frac)$/;"	f
qnxnto	cmake-build-debug/CMakeFiles/3.17.3/CompilerIdC/CMakeCCompilerId.c	/^char const* qnxnto = "INFO" ":" "qnxnto[]";$/;"	v
r	fractol.h	/^	unsigned char		r;$/;"	m	struct:s_color
r_flag	fractol.h	/^	long int			r_flag;$/;"	m	struct:s_shift
rb	fractol.h	/^	t_complex			rb;$/;"	m	struct:s_frac
re	fractol.h	/^	double				re;$/;"	m	struct:s_complex
readline	lib/get_next_line.c	/^int			readline(const int fd, char **line, char *cut)$/;"	f
s_col_name	minilibx_macos/mlx_xpm.c	/^struct  s_col_name$/;"	s	file:
s_color	fractol.h	/^typedef struct			s_color$/;"	s
s_complex	fractol.h	/^typedef struct			s_complex$/;"	s
s_frac	fractol.h	/^typedef struct			s_frac$/;"	s
s_image	fractol.h	/^typedef struct			s_image$/;"	s
s_ldb	lib/get_next_line.h	/^typedef struct		s_ldb$/;"	s
s_list	lib/libft.h	/^typedef	struct		s_list$/;"	s
s_pxl	fractol.h	/^typedef struct			s_pxl$/;"	s
s_shift	fractol.h	/^typedef struct			s_shift$/;"	s
s_window	fractol.h	/^typedef	struct			s_window$/;"	s
s_xpm_col	minilibx_macos/mlx_xpm.c	/^typedef struct  s_xpm_col$/;"	s	file:
search_db	lib/get_next_line.c	/^t_ldb		*search_db(t_ldb *db, const int fd)$/;"	f
search_n	lib/get_next_line.c	/^char		*search_n(char **n, char *cut)$/;"	f
set_pxl	image_constructor.c	/^void 	set_pxl(t_image *image, t_pxl pxl)$/;"	f
shift	fractol.h	/^	t_shift				shift;$/;"	m	struct:s_window
size_line	fractol.h	/^	int					size_line;$/;"	m	struct:s_image
t_color	fractol.h	/^}						t_color;$/;"	t	typeref:struct:s_color
t_complex	fractol.h	/^}						t_complex;$/;"	t	typeref:struct:s_complex
t_frac	fractol.h	/^}						t_frac;$/;"	t	typeref:struct:s_frac
t_image	fractol.h	/^}						t_image;$/;"	t	typeref:struct:s_image
t_ldb	lib/get_next_line.h	/^}					t_ldb;$/;"	t	typeref:struct:s_ldb
t_list	lib/libft.h	/^}					t_list;$/;"	t	typeref:struct:s_list
t_pxl	fractol.h	/^}				t_pxl;$/;"	t	typeref:struct:s_pxl
t_shift	fractol.h	/^}						t_shift;$/;"	t	typeref:struct:s_shift
t_window	fractol.h	/^}						t_window;$/;"	t	typeref:struct:s_window
t_xpm_col	minilibx_macos/mlx_xpm.c	/^} t_xpm_col;$/;"	t	typeref:struct:s_xpm_col	file:
texture	minilibx_macos/mlx_int.h	/^  GLuint		texture;$/;"	m	struct:mlx_img_ctx_s
u_flag	fractol.h	/^	long int			u_flag;$/;"	m	struct:s_shift
vbuffer	minilibx_macos/mlx_int.h	/^  GLuint		vbuffer;$/;"	m	struct:mlx_img_ctx_s
vertexes	minilibx_macos/mlx_int.h	/^  GLfloat		vertexes[8];$/;"	m	struct:mlx_img_list_s
volatile	cmake-build-debug/CMakeFiles/3.17.3/CompilerIdC/CMakeCCompilerId.c	/^# define volatile$/;"	d	file:
width	minilibx_macos/font.c	/^  unsigned int 	 width;$/;"	m	struct:__anon1	file:
width	minilibx_macos/mlx_int.h	/^  int			width;$/;"	m	struct:mlx_img_list_s
win_list	minilibx_macos/mlx_int.h	/^  mlx_win_list_t	*win_list;$/;"	m	struct:mlx_ptr_s
win_ptr	fractol.h	/^	void				*win_ptr;$/;"	m	struct:s_window
window	window.c	/^void				window(t_window *meme)$/;"	f
winid	minilibx_macos/mlx_int.h	/^  void			*winid;$/;"	m	struct:mlx_win_list_s
x	fractol.h	/^	long int			x;$/;"	m	struct:s_shift
x	fractol.h	/^	size_t			x;$/;"	m	struct:s_pxl
y	fractol.h	/^	long int			y;$/;"	m	struct:s_shift
y	fractol.h	/^	size_t			y;$/;"	m	struct:s_pxl
zoom	fractol.h	/^	double				zoom;$/;"	m	struct:s_frac
zoom	fractol.h	/^	double				zoom;$/;"	m	struct:s_window
zoom_in	buttons.c	/^void	zoom_in(t_frac *frac, int curx, int cury)$/;"	f
zoom_out	buttons.c	/^void	zoom_out(t_frac *frac, int curx, int cury)$/;"	f
